; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = ESP32 Sveltekit Template
data_dir = data
extra_configs = 
	factory_settings.ini
	features.ini
  platformio_override.ini
; default_envs = esp32-s3-devkitc-1, esp32-s3-devkitc-1-n16r8v ;  exclude esp32dev as > 100% ATM

;ðŸ’«
[moonlight]
build_flags = 
  -D FT_MOONLIGHT=1
  -D FT_MONITOR=1
  ; ML_CHIPSET: Used by FastLED driver.init
  -D ML_CHIPSET=NEOPIXEL ; GRB, for normal leds (why GRB is normal???)
  ; -D ML_CHIPSET=WS2812B ; RGB, for fairy lights or https://www.waveshare.com/wiki/ESP32-S3-Matrix
  ; -D ML_CHIPSET=APA106 ; for Cube202020 / some fairy curtain strings do not work with WS2812B
  ; -D ML_CHIPSET=SK6812 ; WIP
  ; -D FASTLED_RMT_BUILTIN_DRIVER=true
  ; -D FASTLED_RMT5
  ; -D ML_COLOR_ORDER=GRB ; define your color order here if needed
  ; -D ML_RGBW=1 ; define whether to enable RGBW (1 = yes, 0 = no)
lib_deps =
  https://github.com/FastLED/FastLED.git#3.9.19 ; june 2025
  https://github.com/netmindz/WLED-sync#48cb28f11632b217f9ccd9f72149373919c28af5 ; sourceIP

; ðŸ’« currently only enabled on s3 as esp32dev runs over 100%
[livescripts]
build_flags = 
  -D HTTPD_STACK_SIZE=8192 ; default 4096 but not enough for more complex read and update 
  -D FT_LIVESCRIPT=1
lib_deps =
  ; https://github.com/hpwit/ESPLiveScript.git#39e9409 ; 1.3.2 / v4.2 15-02-2025 ; Comment if FT_LIVESCRIPT=0
  ; https://github.com/hpwit/ESPLiveScript.git#3b1d1b6 ; v4.3 07-03-2025 ; Comment if FT_LIVESCRIPT=0
  ; https://github.com/hpwit/ESPLiveScript.git#62ba8ac ; vjson 24-05-2025 ; Comment if FT_LIVESCRIPT=0
  ; https://github.com/hpwit/ESPLiveScript.git#afc1d6a ; vjson 24-05-2025 ; Comment if FT_LIVESCRIPT=0
  ; https://github.com/hpwit/ESPLiveScript.git#7286d31 ; vjson 24-05-2025 ; Comment if FT_LIVESCRIPT=0
  ; https://github.com/hpwit/ESPLiveScript.git#4074cb5 ; okay
  ; https://github.com/hpwit/ESPLiveScript.git#29ced05 ; 
  ; https://github.com/hpwit/ESPLiveScript.git#7b97f74 ; okay
  ; https://github.com/hpwit/ESPLiveScript.git#7b52eca ; okay
  ; https://github.com/hpwit/ESPLiveScript.git#cccfc0b ; notokay
  ; https://github.com/hpwit/ESPLiveScript.git#4a0cb82 ; vjson 09-06-2025 ; Comment if FT_LIVESCRIPT=0
  ; https://github.com/hpwit/ESPLiveScript.git#6f86b6e ; vjson 09-06-2025 ; Comment if FT_LIVESCRIPT=0
  https://github.com/hpwit/ESPLiveScript.git#9f002b4 ; vjson 16-06-2025 ; Comment if FT_LIVESCRIPT=0
  

[env]
framework = arduino ;espidf will not work as libs rely on arduino (e.g. PhysicHTTP, ...)
; https://github.com/platformio/platform-espressif32/releases
; platform = espressif32 @ 6.10.0 ;Jan 2025, ESP-IDF v4.4.7-dirty / Arduino v2.0.17
platform = espressif32 @ 6.11.0 ; June 2025, ESP-IDF v4.4.7-dirty / Arduino v2.0.17 latest v4.4.7 !
; v4 -> v5 flash size from 1955 to 2238 KB on S3 ! esp32 > 100%...
; v5 resulting in FastLED hickups on all listed versions:
; platform = https://github.com/pioarduino/platform-espressif32/releases/download/2024.07.00/platform-espressif32.zip ; Jul 15, 2024 espressif Arduino core 3.0.2 / IDF 5.1.4: error: no matching function for call to 'NetworkClientSecure::setCACertBundle(const uint8_t [], int)'
; platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.10/platform-espressif32.zip ; Dec 16, 2024 Arduino core 3.1.0 based on IDF 5.3.2.241210
; platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.11/platform-espressif32.zip ; Jan 19, 2025 Arduino core 3.1.1 based on IDF 5.3.2.241224
; platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip ; March 28, 2025 Latest release! ESP-IDF v5.4.1-1-g2f7dcd862a-dirty / Arduino v3.2.0
; platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.13/platform-espressif32.zip ; June 2025 not 54.03? used in latest upstream ESP-IDF v5.3.2-584-g489d7a2b3a-dirty / Arduino v3.1.3
build_flags = 
	${factory_settings.build_flags}
	${features.build_flags}
    -D BUILD_TARGET=\"$PIOENV\"
    -D APP_NAME=\"MoonLight\" ; ðŸŒ™ Must only contain characters from [a-zA-Z0-9-_] as this is converted into a filename
    -D APP_VERSION=\"0.5.6.1\" ; server compatible version string

    ; Move all networking stuff to the protocol core 0 and leave business logic on application core 1
    -D ESP32SVELTEKIT_RUNNING_CORE=0

    ; Uncomment EMBED_WWW to embed the WWW data in the firmware binary
    -D EMBED_WWW

    ; Uncomment to configure Cross-Origin Resource Sharing
    ; -D ENABLE_CORS
    ; -D CORS_ORIGIN=\"*\"

    ; Uncomment to enable informations from ESP32-Sveltekit in Serial Monitor
    -D SERIAL_INFO
    
    ; D E B U G   B U I L D F L A G S
    ; ===============================
    ; These build flags are only for debugging purposes and should not be used in production
    -D CONFIG_ARDUHAL_LOG_COLORS

	; Uncomment to show log messages from the ESP Arduino Core and ESP32-SvelteKit
	-D CORE_DEBUG_LEVEL=4

    ; Serve config files from flash and access at /config/filename.json
    ;-D SERVE_CONFIG_FILES

    ; Uncomment to teleplot all task high watermarks to Serial
    ; -D TELEPLOT_TASKS

    ; Uncomment and set right values if FT_BATTERY=1 and battery voltage is on pin
    ; -D BATTERY_PIN=35 ; not on env:esp32-s3-devkitc-1-n16r8v
    ; -D BATTERY_MV=4200

    ; Uncomment to use JSON instead of MessagePack for event messages. Default is MessagePack.
    ; -D EVENT_USE_JSON=1  // switch off for FT_MONITOR
    
lib_compat_mode = strict

; Uncomment to include the a Root CA SSL Certificate Bundle for all SSL needs
; Needs -D FT_DOWNLOAD_FIRMWARE=1 and -D FT_NTP=1
board_build.embed_files = src/certs/x509_crt_bundle.bin
; Source for SSL Cert Store can bei either downloaded from Mozilla with 'mozilla' ('https://curl.se/ca/cacert.pem')
; or from a curated Adafruit repository with 'adafruit' (https://raw.githubusercontent.com/adafruit/certificates/main/data/roots.pem)
; or complied from a 'folder' full of *.pem / *.dem files stored in the ./ssl_certs folder
board_ssl_cert_source = adafruit

monitor_speed = 115200
monitor_filters = 
	esp32_exception_decoder
    log2file
board_build.filesystem = littlefs
extra_scripts = 
    pre:scripts/build_interface.py
    pre:scripts/generate_cert_bundle.py ; comment if no internet (or developing)
    scripts/merge_bin.py
    scripts/rename_fw.py
    scripts/save_elf.py
lib_deps = 
	ArduinoJson@>=7.0.0
    elims/PsychicMqttClient@^0.2.2

[env:esp32-c3-supermini]
board = esp32-c3-devkitm-1
board_build.mcu = esp32c3
; Uncomment min_spiffs.csv setting if using EMBED_WWW with ESP32
board_build.partitions = min_spiffs.csv
; Use USB CDC for firmware upload and serial terminal
board_upload.before_reset = usb_reset
build_flags = 
    ${env.build_flags}
    ${moonlight.build_flags}
    -DARDUINO_USB_CDC_ON_BOOT=1
    -DARDUINO_USB_MODE=1
lib_deps = 
    ${env.lib_deps}
    ${moonlight.lib_deps}

; commented out as c3 generate FastLED error: FastLED/src/platforms/esp/32/rmt_4/idf4_clockless_rmt_esp32.h:81:46: error: static assertion failed: Invalid pin specified
; [env:esp32-c3-devkitm-1]
; board = esp32-c3-devkitm-1
; board_build.mcu = esp32c3
; ; Uncomment min_spiffs.csv setting if using EMBED_WWW with ESP32
; board_build.partitions = min_spiffs.csv
; ; Use USB CDC for firmware upload and serial terminal
; ; board_upload.before_reset = usb_reset
; ; build_flags = 
; ;     ${env.build_flags}
; ;     -DARDUINO_USB_CDC_ON_BOOT=1
; ;     -DARDUINO_USB_MODE=1

[env:esp32-s3-devkitc-1]
board = esp32-s3-devkitc-1
board_build.mcu = esp32s3
board_build.partitions = default_8MB.csv
; Use USB CDC for firmware upload and serial terminal
; board_upload.before_reset = usb_reset
build_flags = 
   ${env.build_flags}
   ${moonlight.build_flags}
   ${livescripts.build_flags}
   -DARDUINO_USB_CDC_ON_BOOT=1
   -DARDUINO_USB_MODE=1
lib_deps = 
    ${env.lib_deps}
    ${moonlight.lib_deps}
    ${livescripts.lib_deps}



[HP_PHYSICAL_DRIVER]
build_flags = 
  -D HP_PHYSICAL_DRIVER
lib_deps =
  https://github.com/ewowi/I2SClocklessLedDriver.git#c9b12fc ;#dev 20240704 (latest at 20241023)

[HP_PHYSICAL_DRIVER_S3]
build_flags = 
  -D HP_PHYSICAL_DRIVER
lib_deps =
  https://github.com/hpwit/I2SClockLessLedDriveresp32s3

[HP_VIRTUAL_DRIVER]
build_flags = 
  -D HP_VIRTUAL_DRIVER
  -D __NB_DMA_BUFFER=30 ; default 2 (2 causes flickering in case of mapping, 5 also, 10 a bit, 15 a bit, 20 not, on esp32devICLVD). For now stays at 10 as normal esp / 12288 leds is more stable
lib_deps =
  https://github.com/ewowi/I2SClocklessVirtualLedDriver#ce6bd17 ; 2025-02-26

; to do
[MM_HUB75_DRIVER]
build_flags = 
  -D MM_HUB75_DRIVER
lib_deps =
  ; https://github.com/... ;#integration ;ewowi repo adds some proposed PR's and makes sure we don't have unexpected updates




[env:esp32dev]
; Works for nodemcu-32s, devkit-v1 boards and probably others. You can change the pin defines below if needed.
board = esp32dev
board_build.partitions = min_spiffs.csv
build_flags =
    ${env.build_flags}
    ${moonlight.build_flags}
    -D LED_BUILTIN=2
    -D KEY_BUILTIN=0
    -D HTTPD_STACK_SIZE=8192 ; default 4096 but not enough for more complex read and update (esp32 has no livescripts therefore set this explicitly here
lib_deps = 
    ${env.lib_deps}
    ${moonlight.lib_deps}

[env:esp32devPD]
extends = env:esp32dev
build_flags = 
  ${env:esp32dev.build_flags}
  ${HP_PHYSICAL_DRIVER.build_flags}
  ; -D ML_LIVE_MAPPING
lib_deps = 
  ${env:esp32dev.lib_deps}
  ${HP_PHYSICAL_DRIVER.lib_deps}

[env:esp32devVD]
extends = env:esp32dev
build_flags = 
  ${env:esp32dev.build_flags}
  ${HP_VIRTUAL_DRIVER.build_flags}
  ; -D ML_LIVE_MAPPING
  -D MAX_LEDS=12288 ;LEDs specific
lib_deps = 
  ${env:esp32dev.lib_deps}
  ${HP_VIRTUAL_DRIVER.lib_deps}




[env:esp-wrover-kit]
board = esp-wrover-kit ; esp-wrover-kit ;https://github.com/platformio/platform-espressif32/blob/develop/boards/esp-wrover-kit.json
; recommended to pin to a platform version, see https://github.com/platformio/platform-espressif32/releases
; platform = espressif32@6.5.0 ;using platformio/framework-arduinoespressif32 @ ~3.20014.0 / framework-arduinoespressif32 @ 3.20014.231204 (2.0.14)
upload_speed = 1500000
board_build.partitions = min_spiffs.csv
build_flags = 
  ${env.build_flags}
  ${moonlight.build_flags}
  -D CONFIG_IDF_TARGET_ESP32=1
  -D ARDUINO_USB_CDC_ON_BOOT=0 ; Make sure that the right HardwareSerial driver is picked in arduino-esp32 (needed on "classic ESP32")
  -D LED_BUILTIN=2
  -DBOARD_HAS_PSRAM 
  -mfix-esp32-psram-cache-issue
lib_deps = 
    ${env.lib_deps}
    ${moonlight.lib_deps}

[env:esp-wrover-kitPD]
extends = env:esp-wrover-kit
build_flags = 
  ${env:esp-wrover-kit.build_flags}
  ${HP_PHYSICAL_DRIVER.build_flags}
  ; -D ML_LIVE_MAPPING
lib_deps = 
  ${env:esp-wrover-kit.lib_deps}
  ${HP_PHYSICAL_DRIVER.lib_deps}

[env:esp-wrover-kitVD]
extends = env:esp-wrover-kit
build_flags = 
  ${env:esp-wrover-kit.build_flags}
  ${HP_VIRTUAL_DRIVER.build_flags}
  ; -D ML_LIVE_MAPPING
  -D MAX_LEDS=12288 ;LEDs specific
lib_deps = 
  ${env:esp-wrover-kit.lib_deps}
  ${HP_VIRTUAL_DRIVER.lib_deps}




[env:adafruit_feather_esp32s3_nopsram]
board = adafruit_feather_esp32s3_nopsram
board_build.partitions = default_8MB.csv
board_upload.before_reset = usb_reset
build_flags = 
    ${env.build_flags}
    -DARDUINO_USB_CDC_ON_BOOT=1
    -DARDUINO_USB_MODE=1




; ðŸ’«
[env:esp32-s3-devkitc-1-n16r8v]
board = esp32-s3-devkitc-1-n16r8v ;found in boards folder
board_build.partitions = boards/ESP32_16MB_9MB_FS.csv
build_flags =
  ${env.build_flags}
  ${moonlight.build_flags}
  ${livescripts.build_flags}
  -D CONFIG_IDF_TARGET_ESP32S3=1
  -D LOLIN_WIFI_FIX  ; some boards have wifi issues if this is not defined, this sets WIFI_POWER_8_5dBm
lib_deps = 
    ${env.lib_deps}
    ${moonlight.lib_deps}
    ${livescripts.lib_deps}

[env:esp32-s3-devkitc-1-n16r8vPD]
extends = env:esp32-s3-devkitc-1-n16r8v
build_flags = 
  ${env:esp32-s3-devkitc-1-n16r8v.build_flags}
  ${HP_PHYSICAL_DRIVER_S3.build_flags}
  ; -D ML_LIVE_MAPPING
lib_deps = 
  ${env:esp32-s3-devkitc-1-n16r8v.lib_deps}
  ${HP_PHYSICAL_DRIVER_S3.lib_deps}

[env:esp32-s3-devkitc-1-n16r8vVD]
extends = env:esp32-s3-devkitc-1-n16r8v
build_flags = 
  ${env:esp32-s3-devkitc-1-n16r8v.build_flags}
  ${HP_VIRTUAL_DRIVER.build_flags}
  ; -D ML_LIVE_MAPPING
  -D MAX_LEDS=16384 ;LEDs specific
lib_deps = 
  ${env:esp32-s3-devkitc-1-n16r8v.lib_deps}
  ${HP_VIRTUAL_DRIVER.lib_deps}




[env:esp32-s3-devkitc-1-n8r8v]
board = esp32-s3-devkitc-1-n8r8v ;found in boards folder
; board_build.partitions = boards/ESP32_16MB_9MB_FS.csv
build_flags =
  ${env.build_flags}
  ${moonlight.build_flags}
  ${livescripts.build_flags}
  -D CONFIG_IDF_TARGET_ESP32S3=1
  -D LOLIN_WIFI_FIX  ; some boards have wifi issues if this is not defined, this sets WIFI_POWER_8_5dBm
lib_deps = 
    ${env.lib_deps}
    ${moonlight.lib_deps}
    ${livescripts.lib_deps}




;https://www.olimex.com/Products/IoT/ESP32-P4/ESP32-P4-DevKit
; compiling but crashing (firmware.elf': No such file, H_SDIO_DRV: sdio card init failed)
[env:esp32-p4]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.11/platform-espressif32.zip
board = ESP32-P4 ; https://github.com/pioarduino/platform-espressif32/blob/565f02434cd38858a59b7a010c950ffb2bec51df/boards/esp32-p4.json#L24
board_build.partitions  = boards/ESP32_8MB.csv
; framework = arduino
; monitor_speed = 115200
build_flags =
  ${env.build_flags}
    -DARDUINO_USB_MODE=1
    -DARDUINO_USB_CDC_ON_BOOT=1
lib_deps = 
    ${env.lib_deps}

;https://github.com/CreoKinetics/Olimex-ESP32-P4-Test
; compiling but crashing (firmware.elf': No such file, H_SDIO_DRV: sdio card init failed)
; see https://github.com/MoonModules/MoonLight/issues/3
[env:olimex-esp32-p4]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.11/platform-espressif32.zip
;platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip
board = olimex-esp32-p4
framework = arduino
monitor_speed = 115200

board_dir = boards
build_flags =
  ${env.build_flags}
  -DARDUINO_USB_MODE=1
  -DARDUINO_USB_CDC_ON_BOOT=1
lib_deps =
    ${env.lib_deps}

board_build.partitions = default_16MB.csv
